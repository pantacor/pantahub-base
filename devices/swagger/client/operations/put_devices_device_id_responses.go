package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"pantahub-base/devices/swagger/models"
)

// PutDevicesDeviceIDReader is a Reader for the PutDevicesDeviceID structure.
type PutDevicesDeviceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PutDevicesDeviceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutDevicesDeviceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPutDevicesDeviceIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPutDevicesDeviceIDOK creates a PutDevicesDeviceIDOK with default headers values
func NewPutDevicesDeviceIDOK() *PutDevicesDeviceIDOK {
	return &PutDevicesDeviceIDOK{}
}

/*PutDevicesDeviceIDOK handles this case with default header values.

The Device with the applied changes
*/
type PutDevicesDeviceIDOK struct {
	Payload *models.Device
}

func (o *PutDevicesDeviceIDOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{device-id}][%d] putDevicesDeviceIdOK  %+v", 200, o.Payload)
}

func (o *PutDevicesDeviceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Device)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceIDDefault creates a PutDevicesDeviceIDDefault with default headers values
func NewPutDevicesDeviceIDDefault(code int) *PutDevicesDeviceIDDefault {
	return &PutDevicesDeviceIDDefault{
		_statusCode: code,
	}
}

/*PutDevicesDeviceIDDefault handles this case with default header values.

Unexpected Error
*/
type PutDevicesDeviceIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the put devices device ID default response
func (o *PutDevicesDeviceIDDefault) Code() int {
	return o._statusCode
}

func (o *PutDevicesDeviceIDDefault) Error() string {
	return fmt.Sprintf("[PUT /devices/{device-id}][%d] PutDevicesDeviceID default  %+v", o._statusCode, o.Payload)
}

func (o *PutDevicesDeviceIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
