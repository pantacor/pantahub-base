package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDevicesDeviceIDParams creates a new GetDevicesDeviceIDParams object
// with the default values initialized.
func NewGetDevicesDeviceIDParams() *GetDevicesDeviceIDParams {
	var ()
	return &GetDevicesDeviceIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDevicesDeviceIDParamsWithTimeout creates a new GetDevicesDeviceIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDevicesDeviceIDParamsWithTimeout(timeout time.Duration) *GetDevicesDeviceIDParams {
	var ()
	return &GetDevicesDeviceIDParams{

		timeout: timeout,
	}
}

/*GetDevicesDeviceIDParams contains all the parameters to send to the API endpoint
for the get devices device ID operation typically these are written to a http.Request
*/
type GetDevicesDeviceIDParams struct {

	/*DeviceID
	  the device id to resolve

	*/
	DeviceID string

	timeout time.Duration
}

// WithDeviceID adds the deviceID to the get devices device ID params
func (o *GetDevicesDeviceIDParams) WithDeviceID(deviceID string) *GetDevicesDeviceIDParams {
	o.DeviceID = deviceID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetDevicesDeviceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param device-id
	if err := r.SetPathParam("device-id", o.DeviceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
