map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen       80;
    server_name  api.localhost;

    access_log /dev/stdout;

    location / {
        proxy_pass   http://base:12365;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

server {
    server_name api.localhost;
    listen 443 ssl;

    # SSL certificate config
    ssl_certificate /etc/nginx/certs.d/api.localhost.cert.pem;
    ssl_certificate_key /etc/nginx/certs.d/api.localhost.key.pem;

    # Client certificate authentication
    ssl_client_certificate /etc/nginx/certs.d/ca.localhost.cert.pem;
    ssl_verify_client optional_no_ca;
    ssl_verify_depth 1;

    # Proxy settings for large files/streams
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    client_max_body_size 0;
    client_body_buffer_size 128k;

    access_log /dev/stdout;

    # CORS settings
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    location / {
        # Pass client certificate info to upstream
        proxy_set_header Pantahub-TLS-Proxy-Token "abcde1234";
        proxy_set_header Pantahub-TLS-Client-Cert $ssl_client_escaped_cert;
        proxy_set_header SSL_CLIENT_CERT $ssl_client_cert;
        proxy_set_header SSL_CLIENT_VERIFY $ssl_client_verify;
        proxy_set_header SSL_CLIENT_S_DN $ssl_client_s_dn;

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Proxy to base service
        proxy_pass http://base:12365;
        proxy_read_timeout 600s;
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;

        # Enable buffering off for streaming responses
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Optional: Add an error page for certificate errors
    error_page 495 496 497 = @error_cert;

    location @error_cert {
        return 302 http://www.mysite.com/error-cert.html;
    }
}
