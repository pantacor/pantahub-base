services:
  base:
    networks:
      - base
    build:
      context: .
      dockerfile: Dockerfile.development
    links:
      - mongo
      - fluentd
      - localstack
      - elasticsearch
    volumes:
      - ${PWD}:/go/src/gitlab.com/pantacor/pantahub-base
      - ${PWD}/k8s_token.test_data:/run/secrets/kubernetes.io/serviceaccount/token
    ports:
      - 12365:12365
    env_file:
      - ./env.default
      - ./.env.local

  mongo:
    networks:
      - base
    image: mongo:4.4.3
    container_name: mongo
    env_file:
      - ./env.default
      - ./.env.local
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_RS: rs0
      MONGO_PORT: 27017
    volumes:
      - ${PWD}/entrypoints/mongo-cluster-entrypoint:/docker-entrypoint
      - ${PWD}/.data/mongo-1:/data/db
      - ${PWD}/entrypoints/mongokey.yaml:/keys/mongokey.yaml:ro
    command: /docker-entrypoint
    ports:
      - 27017:27017
    links:
      - mongo2
      - mongo3

  mongo2:
    networks:
      - base
    image: mongo:4.4.3
    container_name: mongo2
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_RS: rs0
      MONGO_PORT: 30002
    command: ["/docker-entrypoint"]
    volumes:
      - ${PWD}/entrypoints/mongo-cluster-secondary-entrypoint:/docker-entrypoint
      - ${PWD}/.data/mongo-2:/data/db
      - ${PWD}/entrypoints/mongokey.yaml:/keys/mongokey.yaml:ro
    ports:
      - 30002:30002

  mongo3:
    networks:
      - base
    image: mongo:4.4.3
    container_name: mongo3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_RS: rs0
      MONGO_PORT: 30003
    command: ["/docker-entrypoint"]
    volumes:
      - ${PWD}/entrypoints/mongo-cluster-secondary-entrypoint:/docker-entrypoint
      - ${PWD}/.data/mongo-3:/data/db
      - ${PWD}/entrypoints/mongokey.yaml:/keys/mongokey.yaml:ro
    ports:
      - 30003:30003

  fluentd:
    networks:
      - base
    image: registry.gitlab.com/pantacor/cloud/fluentd-ph:master
    ports:
      - "5140:5140"
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      - FLUENT_ELASTICSEARCH_HOST=elasticsearch
      - FLUENT_ELASTICSEARCH_PORT=9200
    volumes:
      - ./fluentd.localhost.conf:/fluentd/etc/fluent.conf
    depends_on:
      - elasticsearch

  elasticsearch:
    networks:
      - base
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - discovery.seed_hosts="localhost, 127.0.0.1"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"

  localstack:
    networks:
      - base
    image: localstack/localstack:0.9.0
    environment:
      - SERVICES=s3:4566
      - DEFAULT_REGION=us-east-1
      - HOSTNAME=localstack
    ports:
      - "4566:4566"

  kibana:
    networks:
      - base
    image: docker.elastic.co/kibana/kibana:7.17.3
    container_name: kibana
    volumes:
      - ./entrypoints/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - discovery.type=single-node
      - XPACK_SECURITY_ENABLED=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  nginx:
    networks:
      - base
    image: nginx:alpine
    volumes:
      - ./docker_confs/nginx-conf.d:/etc/nginx/conf.d:ro
      - ./docker_confs/nginx-certs.d/:/etc/nginx/certs.d:ro
    ports:
      - "12375:80"
      - "12376:443"
    links:
      - base

networks:
  base:
    driver: bridge

volumes:
  esdata:

