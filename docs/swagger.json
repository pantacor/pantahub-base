{
    "swagger": "2.0",
    "info": {
        "description": "This is the pantahub API documentation to use our API.",
        "title": "Pantahub API reference",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all applications owned by a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get all applications owned by a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apps.TPApp"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/apps/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This define a new application to be used as OAuth client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Create a new third party application",
                "parameters": [
                    {
                        "description": "Create app body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.CreateAppPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.TPApp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/apps/scopes": {
            "get": {
                "description": "Get scopes for OAuth applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get scopes for OAuth applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|Nick|PRN",
                        "name": "serviceID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.Scope"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/apps/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an oauth application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Get an oauth application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.TPApp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a third party application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "Update a third party application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update app body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.CreateAppPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.TPApp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete an oauth client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "summary": "delete an oauth client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.TPApp"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "App not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accounts.Account"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth/accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get list of accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/accounts.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "403": {
                        "description": "user has no admin role",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Account Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.accountCreationPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accounts.Account"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "412": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth/auth_status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get JWT claims from Authorization header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get JWT claims from Authorization header",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.accountClaims"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "post": {
                "description": "send email with token to user in order to reset password to given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "send email with token to user in order to reset password to given user",
                "parameters": [
                    {
                        "description": "New password payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.passwordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accounts.Account"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth/recover": {
            "post": {
                "description": "send email with token to user in order to reset password to given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "send email with token to user in order to reset password to given user",
                "parameters": [
                    {
                        "description": "Account recovery payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.passwordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accounts.Account"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "get": {
                "description": "Verify account payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify account payload",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accounts.Account"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/dash/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The summary contains information about the necessary data need",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dash"
                ],
                "summary": "Get summary information about an Account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dash.Summary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/dash/auth_status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get account JWT token claims payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dash"
                ],
                "summary": "Get account JWT token payload",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dash.accountClaims"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all accounts devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Get all accounts devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new device for an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Create a new device for an account",
                "parameters": [
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/np/{usernick}/{devicenick}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get device by owner nick and device nick",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "get device by owner nick and device nick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NICK",
                        "name": "usernick",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NICK",
                        "name": "devicenick",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/tokens": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all device tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Get all device tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.PantahubDevicesJoinToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Pantahub base offers a built in basic factory story in the sense that we offer the ability to auto assing devices to a specific owner.\nFor that right now we use a simple token based approach:\n1. Owner uses ```/devices/tokens/``` end point to create a new token; optionally he can also provide a set of default user-meta information that the auto assign feature will put in place for every device joinig using such token.\n2. Token is a one-time-visible secret that will only be displayed on reply of the token registration, but not afterwards. If user looses a token he can generate a new one. Old token can stay active if user does not believe the token has been compromised\n3. User configures device at factory to use the produced token as its pantahub registration credential. Pantavisor will then use the token when registering itself for first time. It uses ```Pantahub-Devices-Auto-Token-V1``` to pass the token to pantahub when registering itself. With this pantahub will auto assign the device to the owner of the given token and will put UserMeta in place.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Create a new device token, used for authenticate as device",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.PantahubDevicesJoinToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/tokens/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Disable a device token in order to be unable to used as authetication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Disable a device token in order to be unable to used as authetication",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.disableToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a device using the device ID or the PRN or the device Nick",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Get a device using the device ID or the PRN or the device Nick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|Nick|PRN",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Claim a device as a logged in user with TOKEN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Claim a device by resolving challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.challengePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark a device to be deleted by device garbage collector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Mark a device to be deleted by device garbage collector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "update a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/{id}/device-meta": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update device metadata using the device credentials:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Update device metadata using the device credentials:",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update device metadata using the user credentials:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Update device metadata using the user credentials:",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/{id}/public": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Make a device public",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Make a device public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Make a device private",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Make a device private",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/devices/{id}/user-meta": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user metadata using the user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Update user metadata using the user credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user metadata using the user credentials:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Update user metadata using the user credentials:",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.metaDataPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get information of the health of the api services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get information of the health of the api services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID|PRN|NICK",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/healthz.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one or many log entries as an error of LogEntry\nPage through your logs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get one or many log entries as an error of LogEntry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "list position to start page; either number or ID or '\u003ctsec\u003e.\u003ctnano\u003e' of log entry",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "length of page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma separated list of device prns  to include",
                        "name": "dev",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma separated list of log levels",
                        "name": "lvl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma separated list of log levels",
                        "name": "src",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "common list of items of 'tsec,tnano,device,src,lvl,time-created' you can use - on each individual item to reverse order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "true in case you want us to return a cursor ID as well.",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logs.Pager"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Post one or many log entries as an error of LogEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Post one or many log entries as an error of LogEntry",
                "parameters": [
                    {
                        "description": "New logs body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logs.Entry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logs.Entry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/logs/cursor": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get or one or many log entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get or one or many log entries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "next-cursor ID",
                        "name": "next-cursor",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logs.Pager"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Get API metrics",
                "consumes": [
                    "plain/text"
                ],
                "produces": [
                    "plain/text"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get API metrics",
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all object of the token owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get all object of the token owner",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/objects.Object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new object for a owner token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Create a new object for a owner token",
                "parameters": [
                    {
                        "description": "Object payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/objects/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrive and object by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Retrive and object by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a object content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Update a object content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object payload",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark a object to be deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Mark a object to be deleted",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/objects/{id}/blog": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrive and object content by Object ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Retrive and object content by Object ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/objects.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new subscription as a admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Add a new subscription as a admin",
                "parameters": [
                    {
                        "description": "Subscription request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscriptions.SubscriptionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.RError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accounts.Account": {
            "type": "object",
            "properties": {
                "challenge": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_bcrypt": {
                    "type": "string"
                },
                "password_scrypt": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "redirect_uris": {
                    "description": "Oauth2RedirectURIs is limiting the prefix available for redirecting users with oauth code and accesstoken to",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time-created": {
                    "type": "string"
                },
                "time-modified": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apps.CreateAppPayload": {
            "type": "object",
            "properties": {
                "exposed_scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Scope"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Scope"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apps.TPApp": {
            "type": "object",
            "properties": {
                "deleted-at": {
                    "type": "string"
                },
                "exposedScopesLength": {
                    "type": "integer"
                },
                "exposed_scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Scope"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner-nick": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Scope"
                    }
                },
                "secret": {
                    "type": "string"
                },
                "time-created": {
                    "type": "string"
                },
                "time-modified": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "auth.accountClaims": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "orig_iat": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "roles": {
                    "type": "string"
                },
                "scopes": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "auth.accountCreationPayload": {
            "type": "object",
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "challenge": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encrypted-account": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_bcrypt": {
                    "type": "string"
                },
                "password_scrypt": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "redirect_uris": {
                    "description": "Oauth2RedirectURIs is limiting the prefix available for redirecting users with oauth code and accesstoken to",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time-created": {
                    "type": "string"
                },
                "time-modified": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "auth.passwordReset": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.passwordResetRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dash.BillingInfo": {
            "type": "object",
            "properties": {
                "amountDue": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vatRegion": {
                    "type": "string"
                }
            }
        },
        "dash.DeviceInfo": {
            "type": "object",
            "properties": {
                "device-id": {
                    "type": "string"
                },
                "last-activity": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dash.Quota": {
            "type": "object",
            "properties": {
                "actual": {
                    "type": "number"
                },
                "max": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "dash.SubscriptionInfo": {
            "type": "object",
            "properties": {
                "billing": {
                    "type": "object",
                    "$ref": "#/definitions/dash.BillingInfo"
                },
                "plan-id": {
                    "type": "string"
                },
                "quota-stats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dash.Quota"
                    }
                }
            }
        },
        "dash.Summary": {
            "type": "object",
            "properties": {
                "nick": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "subscription": {
                    "type": "object",
                    "$ref": "#/definitions/dash.SubscriptionInfo"
                },
                "top-devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dash.DeviceInfo"
                    }
                }
            }
        },
        "dash.accountClaims": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "orig_iat": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "roles": {
                    "type": "string"
                },
                "scopes": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "devices.Device": {
            "type": "object",
            "properties": {
                "challenge": {
                    "type": "string"
                },
                "device-meta": {
                    "type": "object",
                    "additionalProperties": true
                },
                "garbage": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner-nick": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "secret": {
                    "type": "string"
                },
                "time-created": {
                    "type": "string"
                },
                "time-modified": {
                    "type": "string"
                },
                "user-meta": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "devices.PantahubDevicesJoinToken": {
            "type": "object",
            "properties": {
                "default-user-meta": {
                    "type": "object",
                    "additionalProperties": true
                },
                "disabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "nick": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "prn": {
                    "type": "string"
                },
                "time-created": {
                    "type": "string"
                },
                "time-modified": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "token-sha": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "devices.challengePayload": {
            "type": "object",
            "properties": {
                "challenge": {
                    "type": "string"
                }
            }
        },
        "devices.disableToken": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "devices.metaDataPayload": {
            "type": "object",
            "additionalProperties": true
        },
        "healthz.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "duration": {
                    "type": "string"
                },
                "start-time": {
                    "type": "string"
                }
            }
        },
        "logs.Entry": {
            "type": "object",
            "properties": {
                "dev": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lvl": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "own": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                },
                "time-created": {
                    "type": "string"
                },
                "tnano": {
                    "type": "integer"
                },
                "tsec": {
                    "type": "integer"
                }
            }
        },
        "logs.Pager": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/logs.Entry"
                    }
                },
                "next-cursor": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "objects.Object": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "initialized": {
                    "type": "boolean"
                },
                "mime-type": {
                    "type": "string"
                },
                "objectname": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "sha256sum": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "sizeint": {
                    "type": "integer"
                },
                "storage-id": {
                    "type": "string"
                }
            }
        },
        "subscriptions.SubscriptionReq": {
            "type": "object",
            "properties": {
                "attrs": {
                    "type": "object",
                    "additionalProperties": true
                },
                "plan": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "utils.RError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "utils.Scope": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "service": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "/auth/authorize",
            "tokenUrl": "/auth/token"
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "/auth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "/auth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/auth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}