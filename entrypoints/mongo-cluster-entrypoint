#!/bin/sh

set -ex

mongod --keyFile /keys/mongokey.yaml --transitionToAuth --replSet ${MONGO_RS} --bind_ip_all --port 27017 &
sleep 5

replicaSet="""{
  \"_id\": \"${MONGO_RS}\",
  \"members\": [
    {
      \"_id\": 0,
      \"host\": \"mongo:27017\"
    },
    {
      \"_id\": 1,
      \"host\": \"mongo2:30002\"
    },
    {
      \"_id\": 2,
      \"host\": \"mongo3:30003\"
    }
  ]
}"""

until mongo --eval "rs.initiate($replicaSet).ok || rs.status().ok" --port 27017 --quiet; do
  echo "checking mongo replica set"
  sleep 1
done

until mongo --eval 'db.createUser({user: "user", pwd: "pass", roles: [{role: "readWrite", db:"pantabase-serv"}], mechanisms: ["SCRAM-SHA-1"]})' localhost:27017/pantabase-serv; do
  echo "checking user"
  if mongo --eval 'db.getUsers()' mongodb://user:pass@localhost:27017/pantabase-serv; then
    echo "get users"
    break
  fi
  echo "checking user done"
  sleep 1
done

until mongo --eval 'db.createUser({user: "phskafkaconnectsink", pwd: "pass", roles: [{role: "readWrite", db:"pantabase_devicesummary"}], mechanisms: ["SCRAM-SHA-1"]})' localhost:27017/pantabase_devicesummary; do
  echo "checking phskafkaconnectsink"
  if mongo --eval 'db.getUsers()' mongodb://phskafkaconnectsink:pass@localhost:27017/pantabase_devicesummary; then
    echo "get users"
    break
  fi
  echo "checking phskafkaconnectsink done"
  sleep 1
done

tail -f /proc/$(pidof mongod)/fd/1
